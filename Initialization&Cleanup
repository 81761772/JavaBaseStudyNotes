1.构建一个子类对象时，先执行其父类的构造方法，再执行自身的构造方法；除构造器外，编译器禁止在其他任何方法中调用构造器；尽管可以用this调用一个构造器，
  但不能调用多个，而且必须将构造器调用语句置于起始处，eg:
  class Test(){
      Test(){
          this(5);//在该构造器中调用另一个构造器，该语句必须置于构造器的开头。
        //this(5);  只能调用一个。
      }
      Test(int i){
          System.out.println(i);
      }
  }

2.this关键字只能在方法内部使用，表示调用该方法的对象的引用，如this.a即该对象的成员，this.b()即该对象的方法。

3.如果想调用父类的一个带参数的构造器，则必须在子类的构造器中编写super(参数)语句。

4.类的成员变量即使没有进行初始化也会获得一个默认值，但局部变量（如方法中定义的变量）不会。

5.类的每个成员保证都会有一个初始值（对象引用初始值为NULL),但对于方法的局部变量，Java则不会提供初始值，eg:
  class Test{
      int i;//系统自动赋值为0
      void test(){
          int j;
          System.out.println(j);//报错，j未初始化。
      }
  }

6.可以在构造器中进行初始化，但构造器外的初始化优先于构造器内的初始化。

7.静态对象初始化优先于非静态对象初始化。
