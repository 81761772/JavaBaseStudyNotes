1.equals()方法用于比较两个对象引用所指的内容是否相等，但因基本类型不是对象故无法调用方法，所以equals()方法不适用于基本类型；
  而“==”运算符比较的是两个对象引用的地址是否相等。

2.别名现象：若两个对象引用最初分别指向不同的对象，那么当在两个对象引用之间采用“=”操作符，如“t1=t2"后，t1被覆盖，也就是丢失了，而
  t1最初指向的对象会由垃圾回收器自动清理，最后t1和t2都指向t2最初指向的对象。

3.现有一个方法：void exam(datatype n)，当调用该方法时传入参数的类型若小于datatype则自动提升，若大于datatype则需进行窄化转换。
  Java类型由低字节到高字节提升规律如下：byte->short->int->long->float->double，char类型直接提升到int类型。
  
4.操作符的重载：一个操作符在应用于特定的类时，被赋予了特殊的意义，如在String中使用“+”和“+=”来连接字符串。
