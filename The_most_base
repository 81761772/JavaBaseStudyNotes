1.
  for(int i = first;i < last;i++){
      if(Condition){
          return target;
      }
      return -1;
  }

  注意以上用法：for循环会一直进行，直到条件Condition得到满足，此时返回target，跳出for循环（需要注意的是，假如第一次循环和第二次循环都满足
  Condition条件时，循环会在第一次跳出，而不执行第二次循环）。若一直到循环结束Condition都没有得到满足，则返回-1。

2.目前来看，JAVA中不存在指针，而用引用来代替。

3.JAVA规定不能将方法体内的局部变量声明为static类型。

4.equals()方法用于比较两个对象引用所指的内容是否相等，而“==”运算符比较的是两个对象引用的地址是否相等。

5.多态即对象类型的多种形态。

6.接口中定义的字段（如常量）必须赋予初值，因为在接口中定义的任何字段都是被static和final修饰的，而被final修饰的字段必须有初值。

7.在接口中定义的方法必须被定义为public或abstract形式。

8.构建一个子类对象时，先执行其父类的构造方法，再执行自身的构造方法。

9.在一个源文件中只能有一个被修饰为public的类。

10.被定义为final的常量定义时需要使用大写字母命名，并且中间使用下划线进行连接。

11.匿名内部类与普通内部类在实现向上转型为接口上有异曲同工之妙，普通内部类将实例化后的内部类对象赋给接口类型的引用以实现向上转型，而匿名内部类直接在
   addActionListener()方法的括号内返回一个接口类型的匿名内部类对象，如下例eg:
   JButton jb = new JButton();
   jb.addActionListener(new ActionListener){//括号内直接实例化了一个接口类型，省去了将实例化结果赋给接口类型的引用这一步
       public void actionPerformed(ActionEvent arg0){
       }
   );

12.关于传递可变参数：eg: public Example(String...strings)
   即调用时参数个数是可变的。

13.需实现无限循环可用“while(true)”或“for(;;)”。

14.JAVA中不支持多继承。

15.在内部类中可以随意使用外部类的成员，即使这些成员被修饰为private。

16.对象存储在堆中，对象引用存储在堆栈中，基本类型（如int）存储在堆栈中，封装类（如Integer）存储在堆中。
